Simple Circuit Description Language
--------------
The language is very elementary. It allows one to express an arithmetic circuit with two operations: addition (+) and multiplication (+). A program written in the language consists of a sequence of declarations, each one independently specified on its own line.  Therefore, each line of the input file corresponds to a declaration. A declaration is of one of two types.

The first type is an input declaration. An input declaration is of the form: input x : 1
In other words it is composed of the keyword "input" followed by whitespace. then followed by a string (in this case "x") that represents a variable name, then a colon (":"), then finally an unsigned integer value, which represents the input number (starting from 0) to the circuit. Note that whitespace after the variable name is ignored. 

The second type of declaration is a function definition. Defining a function named 'f' with arguments 'x' and 'y' that returns their product is illustrated with the following line:
func f(x, x) = x * y. This example illustrates the syntax of a function definition. The definition begins with the keyword "func" and is followd by  a function name along with a list of formal parameters that are comma-separated and within paranthesis. If there are no formal parametres, the paranthesis may be dropped. The right hand side of the "=" symbol specifies the body of the function; this is an expression made up of operators ("+" and "*"), input variables and function arguments. If a variable occurs in an expression that has not already been declared in an input declaration, then it is assigned an input index equal to the next free input number.

Finally, the function name "out" specifies a special function (with no parameters) that gives the circuit produced by the program.

An example of a full program is as follows:

input a1 : 0
input a2 : 1
input b1 : 2
input b2 : 3
input c1 : 4
input c2 : 5
dotprod(x1, x2) = a1*x1 + a2*x2.
out = dotprod(b1, b2) + dotprod(c1, c2)

A program is required to have at least one circuit assignment, and the circuit name in this assignment is required to be the name "out", as shown in the example above.

